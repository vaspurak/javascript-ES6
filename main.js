// let userName = "Mark";
// console.log(userName);
// userName = "vaspurak";
// console.log(userName);
// const yearOfBirth = 1984;
// console.log(yearOfBirth);
// // ------------------------//

// {
//   let userName = "Bob";
//   console.log(userName);

//   var someNumber = 10;
//   console.log(someNumber);
// }
// console.log(someNumber);
// console.log(someNumber);
// var –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –±–ª–æ–∫–∞ –∫–æ–¥–∞

// let name, age;
// name = "Yura";
// age = 28;
// console.log(name, age);
// console.log(age);

// const profession = "js developer";
// console.log(profession);

// typeof-–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å
// const someName = "44";
// console.log(typeof someName);

// BigInt-–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç,–∫–æ—Ç–æ—Ä—ã –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞
// console.log(Number.MAX_SAFE_INTEGER);
// console.log(43589737n + 484564358n);

//  =====3 - –û–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è=====

// console.log(10 > 5);
// console.log(20 > 80);
// let result = 10 == 5;
// console.log(result);
// console.log("5" == 5); //true
// console.log("5" === 5); //false

//if else
// const time = 20;
// if (time < 12) {
//   console.log("dobroe utro");
// } else if (time >= 12 && time < 18) {
//   console.log("dobri den");
// } else {
//   console.log("dobroi vecher");
// }
// && -–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ò
// || - –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ò–õ–ò
// ! - –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ùE

// =====4 –£—Ä–æ–∫ -–¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä=====
// if (10 < 12) {
//   console.log("Uslovie verno");
// } else {
//   console.log("Uslovie ne verno");
// }
// 10 < 12 ? console.log("uslovie verno") : console.log("uslovie ne verno");

// let greeting;
// let time = 10;
// if (time < 12) {
//   greeting = "dobroe utro";
// } else {
//   greeting = "dobri den";
// }
// console.log(greeting);

// let time = 20;
// let greeting = time < 12 ? "Dobroe utro" : "Dobrii den";
// console.log(greeting);

// =====5 –£—Ä–æ–∫ -–ö–æ–Ω–∫–∞—Ç–µ–Ω–∞–Ω—Ü–∏—è:—Å–ª–æ–∂–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –∏ —à–∞–±–ª–æ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –¥–ª–∏–Ω–Ω—É=====
// let greeting = "Privet Mark,";
// let howAreYou = " kak tvoi dela";
// let sayHi = greeting + howAreYou;
// console.log(sayHi);

// const userName = "Mark?";

// console.log(`${greeting}${howAreYou}${userName}`);

// 6 –£—Ä–æ–∫ - –§—É–Ω–∫—Ü–∏–∏ DRY -don't repeat yourself

// function sayHi() {
//   console.log("privet,dorogoi drug");
// }
// sayHi();

// // ==========function declaration=========
// sayHi();
// function sayHi() {
//   console.log("privet");
//   // alert("privet");
// }

// // ============function expression============
// const sayHI = function () {
//   console.log("PRIVET");
//   // alert("PRIVET");
// };
// sayHI();

// console.log(name);
// let name = "bob";

// =====6.1 –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏=====

// function sayHI(name) {
//   console.log(`privet, ${name}! kak tvoi dela?`);

// }
// sayHI("yura");
// sayHI("pavel");
// sayHI("james");

// ============RETURN===========
// function summ(a, b) {
//   const result = a + b;
//   return result;
// }
// let res = summ(10, 15);
// console.log(res);

//  –ö–û–†–û–¢–ö–û
// function summ(a, b) {
//   return a + b;
// }
// let res = summ(10, 15);
// console.log(res);

// =====6.3 - –§—É–Ω–∫—Ü–∏—è –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç=====
// function summ(a, b) {
//   return a + b;
// }

// const result = summ(summ(15, 15), summ(20, 20));
// console.log(result);\

// function summ(a, b) {
//   return a + b;
// }

// function diff(a, b) {
//   return a - b;
// }

// function doSomething(func) {
//   let x = 10;
//   let y = 15;
//   let result = func(x, y);
//   console.log(result);
// }
// doSomething(summ); // 25
// doSomething(diff); // -5

// =====6.4 - –°–∞–º–æ–≤—ã–∑—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è IIFE (ES5)=====
// imidetly involt function expresion

// (function sayHi() {
//   console.log("privet bratan");
// })();

// (function (a, b) {
//   console.log(a + b);
// })(10, 15);

// –≤–æ–∑–≤—Ä–∞—Ç –≤ –ø–µ—Ä–µ–∏–µ–Ω–Ω—É—é
// let res = (function (a, b) {
//   return a + b;
// })(10, 15);
// console.log(res);

//  =====6.5 –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏(—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ ES6)=====
// const sayHi = function sayHI(name) {
//   console.log(`privet,${name}! kak tvoi dela?`);
// };
// sayHI("mark");
// // const arrSayHi2 = (name) => {
// //   console.log(`privet,${name}! kak tvoi dela?`);
// // };
// arrSayHi2("mark");
// const sayHi2 = (name) => console.log(`privet ,${name}!kak tvoi dela?`);
// sayHi2("mark");

// =====7 - –ú–∞—Å—Å–∏–≤—ã=====

// const autoBrand1 = "audi";
// const autoBrand2 = "bmw";
// const autoBrand3 = "mazda";
// const autoBrand4 = "toyota";

// const autoBrands = ["audi", "bmw", "mazda", "toyota"];
// console.log(autoBrands);
// console.log(autoBrands[0]);
// console.log(autoBrands[1]);
// console.log(autoBrands[2]);
// console.log(autoBrands[3]);
// console.log(autoBrands.length);

// autoBrands.push(items);-–î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞
// autoBrands.pop(items);-–£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Å –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞
// autoBrands.shift()(items);-–£–¥–∞–ª–∏—Ç—å —ç–ª–µ–∏–µ–Ω—Ç —Å –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
// autoBrands.unshift(....items);-–î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–∏–µ–Ω—Ç –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
// autoBrands.splice([start] [deleteCount, newElement]
// autoBrands.splice(2.2);
// console.log(autoBrands);

// // =====7.1 –ú–µ—Ç–æ–¥—ã –ú–∞—Å—Å–∏–≤–æ–≤=====
// // .push(), .pop(), .shift(), .unshift(),
// // .splice(), .slice(), .forEach(), .idexOf(), .includes()
// const autoBrands = ["audi", "bmw", "mazda", "toyota"];
// console.log(autoBrands);
// autoBrands.push("nissan");
// console.log(autoBrands);
// autoBrands.splice(2, 2);
// console.log(autoBrands);

// 8 - –¶–´–ö–õ–´
// for (let i = 0; i < 10; i++) {
//   console.log(i);
// }

// =====9 - –û–±—Ö–æ–¥ –º–∞—Å—Å–∏–≤–∞ —Ü—ã–∫–ª–æ–º for=====

// const autoBrands = ["audi", "bmw", "mazda", "toyota"];
// console.log(autoBrands[0]);
// console.log(autoBrands[1]);
// console.log(autoBrands[2]);
// console.log(autoBrands[3]);
// console.log(autoBrands[4]);

// const autoBrands = ["audi", "bmw", "mazda", "toyota"];

// for (i = 0; i < autoBrands.length; i++) {
//   console.log(autoBrands[i]);
// }

// ===== 10 - –û–±—Ö–æ–¥ –º–∞—Å—Å–∏–≤–∞ —Ü—ã–∫–ª–æ–º for (of)=====

// const autoBrands = ["audi", "bmw", "mazda", "toyota"];
// for (let item of autoBrands) {
//   console.log(item);
// }

// 11 - –û–±—Ö–æ–¥ –º–∞—Å—Å–∏–≤–∞ –º–µ—Ç–æ–¥–æ–º forEach()

// const autoBrands = ["audi", "bmw", "mazda", "toyota"];
// autoBrands.forEach(function (brand, i) {
//   console.log(`${brand} => ${i}`);
// });

// const autoBrands = ["audi", "bmw", "mazda", "toyota"];
// autoBrands.forEach(printBrand);
// function printBrand(brand, i) {
//   console.log(`${brand}=>${i}`);
// }

// const autoBrands = ["audi", "bmw", "mazda", "toyota"];
// autoBrands.forEach((brand, i) => console.log(`${brand}=>${i}`));

// // =====12 - –û–±—ä–µ–∫—Ç—ã=====
// let userName = "mark";
// let age = 30;
// let isMarried = false;

// const person = {
//   userName: "mark",
//   age: 30,
//   isMarried: false,
//   profession: "designer",
// };
// console.log(person);
// console.log(person.userName);
// console.log(person["age"]);

// –ï—Å–ª–∏ –∏–º—è —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
// —Ç–æ –º—ã –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏

// let propertyName = "profession";
// console.log(person[propertyName]);

// person.work = "js developer";
// console.log(person);

// delete person.age;
// console.log(person);

// =====13 - –ú–µ—Ç–æ–¥—ã –≤ –æ–±—ä–µ–∫—Ç–∞—Ö=====
// =====14 - –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ this=====
// this - —Å—Å—ã–ª–∞–µ—Ç—å—Å—è –Ω–∞ –æ–±—ä–µ–∫ person

// const person = {
//   userName: "mark",
//   age: 30,
//   isMarried: false,
//   sayHI: function (name) {
//     console.log(this);
//     console.log(`privet, ${name}! menya zovut ${this.userName}`);
//   },
// };
// person.sayHI("yura");4

// =====15 - –û—é—ä–µ–∫—Ç—ã –æ–±—Ö–æ–¥ —Ü–∏–∫–ª–æ–º for in (–Ω–µ –ø—É—Ç–∞—Ç—å —Å for of)=====
// const person = {
//   userName: "mark",
//   age: 30,
//   isMarried: false,

//   sayHi: function (yourName) {
//     console.log(`privet  ${yourName}! menya zovut,${this.userName}`);
//   },
// };

// for (let key in person) {
//   console.log(key, ":", person[key]);
// }

// =====17 - –ö–ª–∞—Å—Å—ã.–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –æ–±—ä–µ–∫—Ç–æ–≤=====

// class Person {
//   constructor(userName, age, isMarried) {
//     this.userName = userName;
//     this.age = age;
//     this.isMarried = isMarried;
//   }
//   sayHi(name) {
//     console.log(`privet  ${name}! menya zovut,${this.userName}`);
//   }
// }
// const person1 = new Person("mark", 30, false);
// const person2 = new Person("pavel", 30, false);

// console.log(person1);
// person1.sayHi("yura");

// console.log(person2);
// person2.sayHi("yura");

// =============–ß–∞—Å—Ç—å 2 –ü—Ä–∞–∫—Ç–∏–∫–∞============
//  –í—ã–±–æ—Ä DOM —ç–ª–ª–µ–º–µ–Ω—Ç–∞
// –í—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ DOM –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É
// document.querySelector('selector');
// const header = document.querySelector("h2").classList.add("red");

// const heading2 = document.querySelector("h2");
// heading2.classList.add("red");

// document.querySelector(".heading-3").classList.add("green");

// const headings = document.querySelectorAll("h2");

// for (let item of headings) {
//   console.log(item);
//   item.classList.add("red-text");
// }
// const paragrafs = document.querySelectorAll("p");
// for (let p of paragrafs) {
//   console.log(p);
//   p.classList.add("green-text");
// }
// paragrafs.forEach(function (p) {
//   p.classList.add("green-text");
// });
// —ç—Ç–æ —Å–¥–µ–ª–∞–ª —è üòé
// paragrafs.forEach((p) => {
//   p.classList.add("green-text");
// });

// const heading = document.querySelectorAll("h2");
// for (let item of heading) {
//   item.classList.add("red-text");
// }
// –≠–¢–û –ü–†–ò–ú–ï–†–´ –°–î–ï–õ–ê–õ –Ø-FOR –ò forEach –≤–æ–∑—å–º–∏ –Ω–∞ –∑–∞–º–µ—Ç–∫—É
// const heading = document.querySelectorAll("h2");
// const paragraf = document.querySelectorAll("p");
// for (let head of heading) {
//   head.classList.add("red", "red-text");
// }
// for (let p of paragraf) {
//   p.classList.add("red", "red-text");
// }

// heading.forEach((h2) => {
//   h2.classList.add("red", "red-text");
// });
// paragraf.forEach((p) => {
//   p.classList.add("red", "red-text");
// });

// –ú–µ—Ç–æ–¥—ã ES5; - —É —ç—Ç–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –Ω–µ—Ç forEach,–≤—ã–≤–æ–¥—è—Ç –≤ –º–∞—Å–∏–≤–∞—Ö

//  document.getElementsByClassName("link"); //–í—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ CSS
// document.getElementsByTagName("h2"); //–í—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ Tag
// document.getElementsById(#header); //–í—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ ID

// ==========–†–∞–±–æ—Ç–∞ —Å CSS –∫–ª–∞—Å—Å–∞–º–∏===========

// Element.classList.add()
// .add() - –î–æ–±–∞–≤–ª—è–µ—Ç CSS –∫–ª–∞—Å—Å
// .remove() - –£–¥–∞–ª—è–µ—Ç  CSS –∫–ª–∞—Å—Å
// .toggle() - –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç CSS –∫–ª–∞—Å—Å(–¥–æ–±–∞–≤–ª—è–µ—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ –±—ã–ª–æ –∏ —É–±–∏—Ä–∞–µ—Ç –µ—Å–ª–∏ –æ–Ω –±—ã–ª)
// .contains() - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ,—Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–∞–∫–æ–π –∫–ª–∞—Å—Å –ª–∏–±–æ –Ω–µ—Ç

// const heading = document.querySelector("h2");
// console.log(heading);
// heading.classList.add("red-text");
// heading.classList.remove("red-text");
// heading.classList.toggle("green-text");
// heading.classList.toggle("green");
// heading.classList.contains("");
// heading.classList.contains("");

// =====–†–ê–ë–û–¢–ê –° –ê–¢–†–ò–ë–£–¢–ê–ú–ò====
/*
getAttribute(attrName) - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞
setAttribute(name,value) - –¥–æ–±–∞–≤–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç –∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫ —ç–ª–µ–º–µ–Ω—Ç—É
hasAttribute(attrName) - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —É —ç–ª–µ–º–µ–Ω—Ç–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞
removeAttribute(attrName) - —É–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç

toggleAttribute(name,force) - –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –∞—Ç—Ä–∏–±—É—Ç –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–ª–∏ —É–¥–∞–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞—Ç—Ä–∏–±—É—Ç
hasAttributes() - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true,–µ—Å–ª–∏ —É —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–º–µ–µ—Ç—Å—è –∫–∞–∫–∏–µ-–ª–∏–±–æ –∞—Ç—Ä–∏–±—É—Ç—ã
getAttributesNames() - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–∞
*/
// –ù–∞–ø—Ä–∏–º–µ—Ä –≤ HTML —É –Ω–∞—Å –µ—Å—Ç—ä
// <img id="logo" src="/images/js.png" alt="logotip" />
// –º—ã –º–æ–∂–µ–º –º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä—ã –∏ –∞—Ç—Ä–∏–±—É—Ç—ã ,—Ñ–æ—Ç–∫–∏ —Å –ø–æ–º–æ—â—é —Å–≤–æ–π—Å—Ç–≤–∞ .setAttribute

// const img = document.querySelector("#logo");
// const foto = img.getAttribute("src");
// console.log(foto);
// img.setAttribute("src", "/images/php.png");
// img.setAttribute("width", "150");
// img.src = "/images/js.png";

// –ö–ù–û–ü–ö–ê : <input id="button" type="submit" value="knopka" />
// const button = document.querySelector("#button");
// button.setAttribute("value", "otpravit");
// button.value = "text dlya knopki";

// ======–†–ê–ë–û–¢–ê –° –ü–†–û–°–õ–£–®–ö–û–ô –°–û–ë–´–¢–ò–ô======
// const button = document.querySelector("#button");
// const img = document.querySelector("#logo");
// button.value = "–£–¥–∞–ª–∏—Ç—å";

// addEventListener - –≠—Ç–æ –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ

// button.addEventListener("click", function () {
//   img.remove();
//   console.log("Click1");
// });
// button.addEventListener("click", function () {
//   img.remove();
//   console.log("Click2");
// });
// button.addEventListener("click", function () {
//   img.remove();
//   console.log("Click3");
// });

// onclick - –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞

// const button = document.querySelector("#button");
// const img = document.querySelector("#logo");
// button.onclick = function () {
//   img.remove();
// };

// <!-- –ü—Ä–æ—Å–ª—É—à–∫–∞ —Å–æ–±—ã—Ç–∏–π 2.–§–æ—Ä–º–∞ -->
// const inputText = document.querySelector("#input-text");
// const textBlock = document.querySelector("#text-block");
// inputText.addEventListener("input", function () {
//   textBlock.innerText = inputText.value;
// });

// –°–ü–û–°–û–ë 2 - –°–û –°–¢–†–ï–õ–û–ß–ù–û–ô –§–£–ù–ö–¶–ò–ï–ô

// const inputText = document.querySelector("#input-text");
// const textBlock = document.querySelector("#text-block");
// inputText.addEventListener("input", () => {
//   textBlock.innerText = inputText.value;
// });
// –°–ü–û–°–û–ë 3 - –û–¢–î–ï–õ–¨–ù–û –ü–†–û–ü–ò–°–ê–í –§–£–ù–ö–ò–Æ –í–ù–ò–ó–£

// const inputText = document.querySelector("#input-text");
// const textBlock = document.querySelector("#text-block");
// inputText.addEventListener("input", inputHendler);
// function inputHendler() {
//   textBlock.innerText = inputText.value;
// }

// =====–û–±—ä–µ–∫—Ç event======
// const list = document.querySelector("#list");
// list.addEventListener("click", function (event) {
//   console.log(this);
//   console.log(event);
//   console.log(event.target);
// });
// –≤–º–µ—Å—Ç–æ (event) - –º–æ–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ,–Ω–æ –∫—Ä–∞—Å–∏–≤–µ–µ event

// ====–†–ê–ë–û–¢–ê –° –≠–õ–ï–ú–ï–ù–¢–ê–ú–ò=====
// –°–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç
// document.createElement('tag-name');

// –ò–∑–º–µ–Ω–∏—Ç—å HTML –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–Ω—É—Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
// element.innerHTML = ''

// –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–Ω—É—Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
// node.innerText = ''

// –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–∏–µ–Ω—Ç–∞
// node.cloneNode(true –∏–ª–∏ false –∏–ª–∏ –±–µ–∑ –Ω–∏—á–µ–≥–æ)  true - c –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º (—Ç–µ–∫—Å—Ç –∏ —Ç–µ–≥–∏),
// false - –±–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ

// –í—Å—Ç–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä—å –¥—Ä—É–≥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// element.append(nodesOrDOMString)

// –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
// element.remove()

// –í—ã–±–æ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
// const container = document.querySelector("#elementsContainer");

// –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
// const newHeader = document.createElement("h1");
// newHeader.innerText = "–ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫";
// container.append(newHeader);

// –ö–ª–æ—Ä–∏–Ω–æ–≤–∞–Ω–∏–µ —à–∞–ø–∫–∏ header –∏–∑ HTML
// const mainHeader = document.querySelector("header");
// const headerCopy = mainHeader.cloneNode(true);
// container.append(headerCopy);

// –í—Å—Ç–∞–≤–∫–∞ —Ä–∞–∑–º–µ—Ç–∫–∏ —á–µ—Ä–µ–∑ —Å—Ç—Ä–æ–∫–∏
// const htmlExample = "<h2>–í—Ç–æ—Ä–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫</h2>";
// container.insertAdjacentHTML("beforeend", htmlExample);

// –í—Å—Ç–∞–≤–∫–∞ —Ä–∞–∑–º–µ—Ç–∫–∏ —á–µ—Ä–µ–∑ —à–∞–±–ª–æ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
// const title = "–¢–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞";
// const htmlExample = `<h2>${title}</h2>`;
// container.insertAdjacentHTML("beforeend", htmlExample);

// ========Todo —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á========
// const todoList = document.querySelector("#todo-list");
// const todoForm = document.querySelector("#todo-form");
// const todoInput = document.querySelector("#todo-input");

// todoForm.addEventListener("submit", formHandler);

// function formHandler(event) {
//   event.preventDefault();
//   // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ –∏–Ω–ø—É—Ç–∞
//   const taskText = todoInput.value;
//   // –°–æ–∑–¥–∞—ë–º —Ç–µ–≥ li —á–µ—Ä–µ–∑ —Ä–∞–∑–º–µ—Ç–∫—É : 1 - –ú—ç—Ç–æ–¥
//   const li = `<li>${taskText}</li>`;

//   // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
//   todoList.insertAdjacentHTML("beforeend", li);
//   // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
//   todoInput.value = "";
//   // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
//   todoInput.focus();
// }

// –°–æ–∑–¥–∞—ë–º —Ç–µ–≥ li —á–µ—Ä–µ–∑ —Ä–∞–∑–º–µ—Ç–∫—É : 2 - –ú—ç—Ç–æ–¥

// const todoList = document.querySelector("#todo-list");
// const todoForm = document.querySelector("#todo-form");
// const todoInput = document.querySelector("#todo-input");

// todoForm.addEventListener("submit", formHendler);
// function formHendler(event) {
//   event.preventDefault();
//   // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ –∏–Ω–ø—É—Ç–∞
//   const taskText = todoInput.value;
//   // –°–æ–∑–¥–∞—ë–º –¢–≠–ì li —Å –ø–æ–º–æ—à—å—é —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
//   const newTask = document.createElement("li");
//   newTask.innerText = taskText;
//   // –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–∏—Ç—å
//   const deleteBtn = document.createElement("button");
//   deleteBtn.setAttribute("role", "button");
//   deleteBtn.innerText = "–£–¥–∞–ª–∏—Ç—å";
//   deleteBtn.style["margin-left"] = "15px";
//   newTask.append(deleteBtn);
//   // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ –∫–ª–∏–∫—É
//   deleteBtn.addEventListener("click", function () {
//     this.closest("li").remove();
//   });
//   // –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
//   todoList.append(newTask);
//   // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥—è –ø–æ—Å–ª–µ –ø—Ä–æ—Å–ø–∏—Å–∏
//   todoInput.value = "";
//   // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
//   todoInput.focus();
// }

// ============setInterval==========
// setInterval -–≠—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç—Å—è —Å—á—ë—Ç—á–∏–∫.–ù–∞–¥–æ –∑–∞–¥–∞—Ç—å —á–∏—Å–ª–æ,–Ω–∞–ø—Ä–∏–º–µ—Ä 1000–º–ª—Å
// clearInterval - –≠—Ç–æ —Å—Ç–æ–ø –¥–ª—è —Å—á—ë—Ç—á–∏–∫–æ–≤.

// const timerIntervalID = setInterval(function () {
//   console.log("fired");
// }, 1000);

// clearInterval(timerIntervalID);

//        =====setTimeout=====
// –≠—Ç–æ –∞–Ω–æ–ª–æ–≥—Ç—á–Ω—ã–π –º—ç—Ç–æ–¥ clearInterval-–∞,–∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç
// –∫–∞–∫–æ–µ-–ª–∏–±–æ —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –∫–æ–¥,—á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π
// –ø—Ä–æ–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏.—Ç–µ —á–µ—Ä–µ–∑–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —Ç–∞–π–º–µ—Ä

// const timeID = setTimeout(function () {
//   console.log("setTimeout Fired");
// }, 2000);
// clearInterval(timeID);

// –í–º–µ—Å—Ç–µ
// ========setInterval + setTimeout========
// const timerID = setInterval(function () {
//   console.log("setInterval Fired!");
// }, 1000);
// setTimeout(function () {
//   clearInterval(timerID);
// }, 10000);

// ========–ü–†–ê–ö–¢–ò–ö–ê. -–°–ï–ö–£–ù–î–û–ú–ï–†========
// const counterElement = document.querySelector("#counter");
// let counter = 0;
// let timerID;

// const btnStart = document.querySelector("#start");
// btnStart.onclick = function () {
//   timerID = setInterval(function () {
//     counter++;
//     counterElement.innerText = counter;
//   }, 1000);
// };

// const btnPause = document.querySelector("#pause");
// btnPause.onclick = function () {
//   clearInterval(timerID);
// };

// const btnReset = document.querySelector("#reset");
// btnReset.onclick = function () {
//   counter = 0;
//   counterElement.innerText = counter;
//   clearInterval(timerID);
// };
// 5:00

// =======CallBack , CallBack hell========
// setTimeout(function () {
//   console.log("step 1");
//   setTimeout(function () {
//     console.log("step 2");
//     setTimeout(function () {
//       console.log("step 3");
//     }, 1000);
//   }, 1500);
// }, 2000);

// 1 - –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ –≤ –æ—Ç–µ–ª–µ
// function checkRooms() {
//   setTimeout(function () {
//     console.log("proverka nomerov");
//     const Rooms = true;
//     if (Rooms) {
//       console.log("nomer est");
//       console.log("edem v otpusk");
//     } else {
//       console.log("nomerov net");
//       console.log("otpusk otmenyaetca");
//     }
//   }, 1000);
// }
// checkRooms();
// 2 - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∏–∞–±–∏–ª–µ—Ç–æ–≤

// function checkRooms(succes, failed) {
//   setTimeout(function () {
//     console.log("PROVERKA NOMEROV V OTELE");
//     const avaiLableRooms = true;
//     if (avaiLableRooms) {
//       let message = "NOMERA EST";
//       submitVacation(message);
//     } else {
//       let message = "NOMERA NET";
//       cancelVacacion(message);
//     }
//   }, 1000);
// }
// checkRooms();
// function cancelVacacion(message) {
//   console.log("===cancelVacation===");
//   console.log("Otvet na predidushem shage :", message);
//   console.log("Otpusk otmenyaecaüò•");
// }

// function submitVacation(message) {
//   console.log("=submitVacation=");
//   console.log("Otvet na predidushem shage :", message);
//   console.log("Edem v otpusküå¥");
// }

// 3 - –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ –∏ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤

// function checkRooms(success, failed) {
//   setTimeout(function () {
//     console.log("PROVERKA NOMEROV V OTELE");
//     const avaiLableRooms = true;
//     if (avaiLableRooms) {
//       let message = "NOMERA EST";
//       success(message);
//     } else {
//       let message = "NOMERA NET";
//       failed(message);
//     }
//   }, 1000);
// }
// function checkTicets(message, success, failed) {
//   setTimeout(function () {
//     console.log("---function checkTicets");
//     console.log("Otvet na predidushem Shage :", message);
//     console.log("Proveryaem Aviabileti");
//     const avaiLableTickets = true;
//     if (avaiLableTickets) {
//       let message = "Bileti est";
//       success(message);
//     } else {
//       let message = "Biletov net";
//       failed(message);
//     }
//   }, 500);
// }
// function cancelVacation(message) {
//   console.log("===cancelVacation===");
//   console.log("Otvet na predidushem shage :", message);
//   console.log("Otpusk otmenyaecaüò•");
// }

// function submitVacation(message) {
//   console.log("=submitVacation=");
//   console.log("Otvet na predidushem shage :", message);
//   console.log("Edem v otpusküå¥");
// }

// checkRooms(
//   function (messageFromCheckRooms) {
//     checkTickets(
//       messageFromCheckRooms,
//       function (messageFromCheckTickets) {
//         submitVacation(messageFromCheckTickets);
//       },
//       function (messageFromCheckTickets) {
//         cancelVacation(messageFromCheckTickets);
//       }
//     );
//   },
//   function (messageFromCheckRooms) {
//     cancelVacation(messageFromCheckRooms);
//   }
// );
// =============–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–∏—Å–æ–≤=========
// const myPromise = new Promise(function (resolve, reject) {
//   console.log("Promise created");
//   setTimeout(function () {
//     // –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
//     const response = true;

//     if (response) {
//       let message = "SUCCESS";
//       resolve(message);
//     } else {
//       let message = "FAILED";
//       reject(message);
//     }
//   }),
//     1500;
// });
// myPromise
//   .then(function (data) {
//     return new Promise(function (resolve, reject) {
//       setTimeout(() => {
//         console.log("Then1");
//         console.log(data);
//         const response = false;
//         if (response) {
//           resolve("data from then 1");
//         } else {
//           reject("data from then 1");
//         }

//         resolve();
//       }, 1000);
//     });
//   })
//   .then(function (data) {
//     setTimeout(() => {
//       console.log("Then2");
//       console.log(data);
//     }, 500);
//   })

//   .catch(function (data) {
//     console.log("Catch");
//     console.log(data);
//   });

// //== 1. –¶–µ–ø–æ—á–∫–∞ –ø—Ä–æ–∏—Ç—Å–æ–≤.–ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–º–∏—Å–æ–≤ —Å setTimeout==

// const checkRooms = new Promise(function (resolve, reject) {
//   setTimeout(function () {
//     console.log("–ü–†–û–í–ï–†–Ø–ï–ú –ù–û–ú–ï–†–ê –í –û–¢–ï–õ–ï");
//     const avaiLableRooms = true;
//     console.log(avaiLableRooms);

//     if (avaiLableRooms) {
//       resolve("Nomera est");
//     } else {
//       reject("Nomera net");
//     }
//     // console.log(checkRooms);
//   }),
//     5500;
// });
// checkRooms
//   .then(function (data) {
//     return new Promise(function (resolve, reject) {
//       setTimeout(() => {
//         console.log("--Then 1.--Proverka nomerov...");
//         console.log("Otvet na predidushem shage:", data);
//         console.log("Proveryaem aviabileti...");

//         const avaiLableTickets = true;
//         if (avaiLableTickets) {
//           let message = "BILETI EST";
//           resolve(message);
//         } else {
//           let message = "NET BILETOV";
//           reject(message);
//         }
//       }),
//         5000;
//     });
//   })
//   .then(function (data) {
//     console.log("---then 2---");
//     console.log("Otvet na predidushem shage:", data);
//     console.log("letim v otpusk üòâüå¥üòú");
//   })
//   .catch(function (data) {
//     console.log("---cathc---");
//     console.log("Otvet na predidushem shage:", data);
//     console.log("otpusk otmenyaecaüò•ü•µ");
//   });

//==2.–¶–µ–ø–æ—á–∫–∞ –ø—Ä–æ–∏—Ç—Å–æ–≤.–û—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.–ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–º–∏—Å–æ–≤ —Å setTimeout==

// –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–Ω–æ—Å–∏–º –≤ –Ω–æ–≤—É—é –≤–Ω–∏–∑ function checkTickets()
// checkRooms().then(checkTickets).then(success).catch(failed);

// function checkRooms() {
//   return new Promise(function (resolve, reject) {
//     setTimeout(function () {
//       console.log("–ü–†–û–í–ï–†–Ø–ï–ú –ù–û–ú–ï–†–ê –í –û–¢–ï–õ–ï");
//       const avaiLableRooms = true;
//       console.log(avaiLableRooms);

//       if (avaiLableRooms) {
//         resolve("Nomera est");
//       } else {
//         reject("Nomera net");
//       }
//     }, 1500);
//   });
// }

// function checkTickets(data) {
//   return new Promise(function (resolve, reject) {
//     setTimeout(() => {
//       console.log("--Then 1--");
//       console.log("Otvet na predidushem shage:", data);
//       console.log("Proveryaem aviabileti...");
//       const avaiLableTickets = true;
//       if (avaiLableTickets) {
//         let message = "BILETI EST";
//         resolve(message);
//       } else {
//         let message = "NET BILETOV";
//         reject(message);
//       }
//     }, 1000);
//   });
// }

// // —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ .then(success),—á—Ç–æ–±—ã –±—ã–ª–æ –∫–æ—Ä–æ—Ç–∫–æ
// function success(data) {
//   console.log("---success--");
//   console.log("Otvet na predidushem shage:", data);
//   console.log("letim v otpusk üòâüå¥üòú");
// }
// // —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤  .catch(failed);—á—Ç–æ–±—ã –±—ã–ª–æ –∫–æ—Ä–æ—Ç–∫–æ
// function failed(data) {
//   console.log("---failed--");
//   console.log("Otvet na predidushem shage:", data);
//   console.log("otpusk otmenyaecaüò•ü•µ");
// }

// ==Async function.–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞

// function promiseFunction() {
//   return new Promise(function (resolve, reject) {
//     setTimeout(() => {
//       const result = false;
//       if (result) {
//         resolve("DONE!");
//       } else {
//         reject("FAIL!");
//       }
//     }, 500);
//   });
// }
// async function startPromise() {
//   try {
//     const result = await promiseFunction();
//     console.log(result);
//   } catch (error) {
//     console.log(error);
//   }
// }
// startPromise();

// ==–ù–µ—Å–∫–æ–ª—å–∫–æ –∞—Å–∏—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü—ã–π.–°–µ—Ä–∏—è –ø—Ä–æ–º–∏—Å–æ–≤.–ü–†–ò–ú–ï–†==

// function checkRooms() {
//   return new Promise(function (resolve, reject) {
//     setTimeout(() => {
//       console.log("–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ...");
//       let Rooms = true;
//       if (Rooms) {
//         resolve("–ù–æ–º–µ—Ä–∞ –µ—Å—Ç—å!");
//       } else {
//         reject("–ù–µ—Ç –Ω–æ–º–µ—Ä–æ–≤");
//       }
//     }, 1500);
//   });
// }
// function checkTicets(data) {
//   return new Promise(function (resolve, reject) {
//     setTimeout(() => {
//       console.log("----checkTicets----");
//       console.log("–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:", data);
//       let ticets = true;
//       if (ticets) {
//         let message = "–ë–∏–ª–µ—Ç—ã –µ—Å—Ç—å";
//         resolve(message);
//       } else {
//         reject(message);
//       }
//     }, 1500);
//   });
// }
// // ---–ü–æ–¥–≤–µ—Ä–∂–¥–µ–Ω–∏–µ---
// function submitVacation(data) {
//   console.log("---submitVacation----");
//   console.log("–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:", data);
//   console.log("–ï–¥–µ–º –≤ –æ—Ç–ø—É—Å–∫üå¥üòú");
// }
// // ---–û—Ç–º–µ–Ω–∞---
// function cancelVacation(data) {
//   console.log("---canceltVacation----");
//   console.log("–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:", data);
//   console.log("–û—Ç–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è ü•µ");
// }
// async function checkVacation() {
//   try {
//     const roomResult = await checkRooms();
//     const ticketsResult = await checkTicets(roomResult);
//     submitVacation(ticketsResult);
//   } catch (error) {
//     cancelVacation(error);
//   }
// }
// checkVacation();

// ===–ü—Ä–∏–º–µ—Ä fetch —Å –ø—Ä–æ–º–∏—Å–∞–º–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ API
//htpps://www.cbr-xmL-daily.ru
// 1.–î–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
// fetch("https://www.cbr-xml-daily.ru/daily_json.js")
//   .then(function (data) {
//     return data.json();
//   })
//   .then(function (data) {
//     console.log(data);
//   });
// async function getCurrencies() {
//   const url = "https://www.cbr-xml-daily.ru/daily_json.js";
//   const response = await fetch(url);
//   const data = await response.json();

//   console.log(data.Valute.USD.Value.toFixed(2)); //tofixe(),—Å–æ–∫—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–∞ —Å –∫–æ–Ω—Ü–∞
//   console.log(data.Valute.EUR.Value.toFixed(2));

//   const usdRate = data.Valute.USD.Value.toFixed(2);
//   const eurRate = data.Valute.EUR.Value.toFixed(2);
//   // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
//   const usdElement = document.querySelector("#usd");
//   const eurElement = document.querySelector("#eur");
//   usdElement.innerText = usdRate;
//   eurElement.innerText = eurRate;
// }

// getCurrencies();

// ====================================
// const myPromise = new Promise(function (resolve, reject) {
//   console.log("Promise created");
//   setTimeout(function () {
//     const response = true;

//     if (response) {
//       let message = "SUCCESS";
//       resolve(message);
//     } else {
//       let message = "FAILED";
//       reject(message);
//     }
//   }, 1500);
// });
// myPromise
//   .then(function (data) {
//     return new Promise(function (resolve, reject) {
//       setTimeout(() => {
//         console.log("THEN 1!");
//         const response = false;
//         if (response) {
//           resolve("data from then 1");
//         } else {
//           reject("data from then 1");
//         }
//         resolve("data from then 2");
//         console.log(data);
//         // return "data from then 1";
//       }, 1000);
//     });
//   })

//   .then(function (data) {
//     setTimeout(() => {
//       console.log("Then 2!");
//       console.log(data);
//     }, 500);
//   })
//   .catch(function (data) {
//     console.log("CATCH!!!");
//     console.log(data);
//   });
const checkRooms = new Promise(function (resolve, reject) {
  setTimeout(() => {
    console.log("Proverka nomerov v otele...!");
    let availableRooms = true;
    if (availableRooms) {
      resolve("Nomera est!");
    } else {
      reject("Nomerov net!");
    }
  }, 1500);
});
// ----------then---------------
checkRooms
  .then(function (data) {
    return new Promise(function (resolve, reject) {
      setTimeout(() => {
        console.log("-------then1-------");
        console.log("Otvet na predidushen shage:", data);
        console.log("proveryaem aviabileti");
        let avaiLableTickets = true;
        if (avaiLableTickets) {
          let message = "Bileti est!!!";
          resolve(message);
        } else {
          let message = "Biletov net";
          reject(message);
        }
      });
    }, 1000);
  })
  // ------------catch-----------
  .then(function (data) {
    console.log("---then2---");
    console.log("Otvet na predidushen shage:", data);
    console.log("Edem v otpusk üëå");
  })

  .catch(function (data) {
    console.log("---catch!!!!---");
    console.log("Otvet na predidushen shage:", data);
    console.log("Otpusk otmenyaeca üò°");
  });

// // ----------then---------------
// checkRooms
//   .then(function (data) {
//     console.log("---then1 submitvacation---");
//     console.log("Otvet na predidushen shage", data);
//     console.log("Edem v otpusk üëå");
//   })
//   // ------------catch-----------

//   .catch(function (data) {
//     console.log("---catch!!!!---");
//     console.log("Otvet na predidushen shage", data);
//     console.log("Otpusk otmenyaeca üò°");
//   });
